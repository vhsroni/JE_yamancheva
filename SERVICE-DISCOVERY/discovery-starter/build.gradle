plugins {
    id 'java-library'
    id 'maven-publish'
    id 'io.spring.dependency-management' version '1.1.7'
}


jar {
    archiveBaseName = 'discovery-service-starter'
    archiveVersion = '1.0.0'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.boot:spring-boot-dependencies:3.4.5"
    }
}

group = 'ru.vhsroni'
version = '1.0.0'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
    withSourcesJar()
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-autoconfigure:3.4.5'
    implementation 'org.springframework.boot:spring-boot-starter-webflux:3.4.5'
    implementation 'org.springframework:spring-context:6.2.0'

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor:3.4.5'

    testImplementation 'org.springframework.boot:spring-boot-starter-test:3.4.5'
    compileOnly 'org.projectlombok:lombok:1.18.38'
    annotationProcessor 'org.projectlombok:lombok:1.18.38'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifactId = 'discovery-service-starter'

            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }

            pom {
                name = 'User Service Starter'
                description = 'Spring Boot Starter for User Service'

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id = 'vhsroni'
                        name = 'veronika'
                    }
                }

                properties = [
                        'maven.compiler.source': '21',
                        'maven.compiler.target': '21'
                ]
            }
        }
    }

    repositories {
        mavenLocal()
    }
}